{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","endpoint","a","fetch","response","json","FindMovie","addMovie","useState","setMovie","errorText","setErrorText","title","setTitle","emptyTitle","setEmptyTitle","onAddMovie","useCallback","event","preventDefault","onFindMovieTitle","newMovie","onChangeTitle","target","value","onSubmit","htmlFor","type","id","placeholder","classNames","onChange","onClick","disabled","App","setMovies","isAddedMovie","setIsAddedMovie","newFilm","every","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd4c8af8.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = ' https://www.omdbapi.com/?i=tt3896198&apikey=1baacbe';\n\nexport const getMovie = async (endpoint: string) => {\n  const response = await fetch(`${API_URL}&t=${endpoint}`);\n\n  return response.json();\n};\n","import React, {\n  useCallback,\n  useState,\n  FormEvent,\n} from 'react';\nimport './FindMovie.scss';\n\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\ninterface Props {\n  addMovie: (movie: Movie) => void,\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [errorText, setErrorText] = useState(false);\n  const [title, setTitle] = useState('');\n  const [emptyTitle, setEmptyTitle] = useState(false);\n\n  const onAddMovie = useCallback((event: FormEvent) => {\n    event.preventDefault();\n    if (movie && !errorText) {\n      addMovie(movie);\n      setMovie(null);\n      setTitle('');\n    }\n  }, [movie, errorText]);\n\n  const onFindMovieTitle = async () => {\n    if (!title) {\n      setErrorText(false);\n      setEmptyTitle(true);\n\n      return;\n    }\n\n    const newMovie = await getMovie(title);\n\n    if (!newMovie.Title) {\n      setEmptyTitle(false);\n      setErrorText(true);\n\n      return;\n    }\n\n    setMovie(newMovie);\n    setErrorText(false);\n    setEmptyTitle(false);\n  };\n\n  const onChangeTitle = useCallback((event => {\n    setTitle(event.target.value);\n  }), []);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={onAddMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': errorText })}\n              value={title}\n              onChange={onChangeTitle}\n            />\n          </div>\n          {errorText && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n          {emptyTitle && (\n            <p className=\"help is-danger\">\n              Enter the title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onFindMovieTitle}\n\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={onAddMovie}\n              disabled={movie === null}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard\n            movie={movie}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[] | []>([]);\n  const [isAddedMovie, setIsAddedMovie] = useState(false);\n\n  const addMovie = (newFilm: Movie) => {\n    if (movies.every(movie => movie.imdbID !== newFilm.imdbID)) {\n      setMovies((prev) => [...prev, newFilm]);\n      setIsAddedMovie(false);\n    } else {\n      setIsAddedMovie(true);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n        {isAddedMovie && (\n          <p className=\"help is-danger\">\n            Such a movie has been already added\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}